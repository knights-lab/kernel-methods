[1] "positive classes: "
[1] "bact"
[1] "negative classes:"
[1] "Nobact"
[1] "map size before filtering:"
[1] 28  5
[1] "map size after user filter:"
[1] 28  5
[1] "map size after class filter:"
[1] 11  5
character(0)
No traceback available 
1: balanced.folds(filtered.var, nfolds)
3: is.factor(x)
2: as.factor(fold.ids)
1: levels(as.factor(fold.ids))
4: socketConnection("localhost", port = port, server = TRUE, blocking = TRUE, 
       open = "a+b", timeout = timeout)
3: newPSOCKnode(names[[i]], options = options, rank = i)
2: makePSOCKcluster(spec, ...)
1: makeCluster((detectCores() - 1))
3: defaultCluster(cl)
2: clusterCall(cl, eval, substitute(expr), env = .GlobalEnv)
1: clusterEvalQ(clust, library("e1071"))
3: defaultCluster(cl)
2: clusterCall(cl, eval, substitute(expr), env = .GlobalEnv)
1: clusterEvalQ(clust, library("kernlab"))
3: defaultCluster(cl)
2: clusterCall(cl, eval, substitute(expr), env = .GlobalEnv)
1: clusterEvalQ(clust, library("randomForest"))
3: defaultCluster(cl)
2: clusterCall(cl, eval, substitute(expr), env = .GlobalEnv)
1: clusterEvalQ(clust, source("src/model.knn.r"))
3: defaultCluster(cl)
2: clusterCall(cl, eval, substitute(expr), env = .GlobalEnv)
1: clusterEvalQ(clust, source("src/model.svm.r"))
3: defaultCluster(cl)
2: clusterCall(cl, eval, substitute(expr), env = .GlobalEnv)
1: clusterEvalQ(clust, source("src/train.r"))
3: defaultCluster(cl)
2: clusterCall(cl, eval, substitute(expr), env = .GlobalEnv)
1: clusterEvalQ(clust, library("caret"))
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "map")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "otus")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "uni.map")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "uni.dist")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "uni.sim")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "bc.map")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "bc.dist")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "bc.sim")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "l2.dist")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "l2.outcomes")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "fold.ids")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "numMethods")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "numKernels")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "variable")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "positiveClasses")
3: defaultCluster(cl)
2: clusterCall(cl, gets, name, get(name, envir = envir))
1: clusterExport(clust, "variable")
2: defaultCluster(cl)
1: parLapply(clust, 1:nfolds, doOuterCV)
No traceback available 
1: barplot(pearson.means, las = 2, ylim = c(min(pearson.means) - 
       0.02, max(pearson.means) + 0.02), xpd = FALSE, col = brewer.pal(8, 
       "Set2"))
1: text(midpoints, round(pearson.means, 4), labels = round(pearson.means, 
       4))
null device 
          1 
